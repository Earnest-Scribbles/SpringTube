version: '3'
services:

  db:
    image: mongo:latest
    container_name: db
    ports:
     - "4000:27017"
    restart: always

  aws-storage:
    image: aws-storage
    build:
      context: ./aws-storage
      dockerfile: Dockerfile-dev
    container_name: video-storage
    volumes:
    # Mounting the Go module cache directory
      - /tmp/video-storage/go-mod:/go/pkg/mod:z
    # Mounting the Go build cache directory
      - /tmp/video-storage/go-cache:/root/.cache/go-build:z
    # Mounting the source code directory
      - ./aws-storage/src:/app/src:z
    ports:
     - "4001:80"
    environment:
      - PORT=80
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
    restart: "no"

  video-streaming:
    image: video-streaming
    build:
      context: ./video-streaming
      dockerfile: Dockerfile-dev
    container_name: video-streaming
    volumes:
    # Mounting the Go module cache directory
      - /tmp/video-streaming/go-mod:/go/pkg/mod:z
    # Mounting the Go build cache directory
      - /tmp/video-streaming/go-cache:/root/.cache/go-build:z
    # Mounting the source code directory
      - ./video-streaming/src:/app/src:z
    ports:
     - "4002:80"
    environment:
      - PORT=80
      - DBHOST=mongodb://db:27017
      - DBNAME=video-streaming
      - VIDEO_STORAGE_HOST=video-storage
      - VIDEO_STORAGE_PORT=80
    depends_on:
      - db
    restart: "no"

  history:
    image: history
    build:
      context: ./history
      dockerfile: Dockerfile-dev
    container_name: history
    volumes:
    # Mounting the Go module cache directory
      - /tmp/history/go-mod:/go/pkg/mod:z
    # Mounting the Go build cache directory
      - /tmp/history/go-cache:/root/.cache/go-build:z
    # Mounting the source code directory
      - ./history/src:/app/src:z
    ports:
     - "4003:80"
    environment:
      - PORT=80
      - DBHOST=mongodb://db:27017
      - DBNAME=history
    depends_on:
      - db
    restart: "no"